---
# NOTE: That didn't work, thus use of instance with nested virtualization enabled.
#
# container:
#   image: ubuntu:20.04
#   kvm: true

compute_engine_instance:
  image_project: cirrus-images
  image: family/docker-kvm
  platform: linux
  cpu: 4
  memory: 16G
  disk: 100
  nested_virtualization: true

# environment variables

env:
  DEBIAN_FRONTEND: noninteractive
  HOME: "$CIRRUS_WORKING_DIR"
  PACKER_TMP_DIR: "$CIRRUS_WORKING_DIR/.packer.d"
  MINIO_ACCESS_KEY: "ENCRYPTED[3cbae51bb9bbab4bb216638bde05aef2bf0ab46541238c37a9f2ed18aca74e392995b24128827cf32ac5b5ba0ab607dd]"
  MINIO_SECRET_KEY: "ENCRYPTED[8f2b0f75c64c88e70bd2e55a2798678d049e9a28895c0c1ad805070a74c3583df6e9080535ff9151fdc8777dc7d207c0]"

# task templates

build_openstack_flatcar_task_template: &BUILD_OPENSTACK_FLATCAR_TASK_TEMPLATE
  install_script:
    - while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;
    - while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 5; done;
    - apt-get update
    - apt-get install -y qemu-kvm curl git software-properties-common make python3-pip patch
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com focal main"
    - apt-add-repository --yes --update ppa:ansible/ansible
    - apt-get install -y ansible
    - wget https://dl.min.io/client/mc/release/linux-amd64/mc
    - chmod +x mc
    - ./mc alias set minio https://minio.services.osism.tech $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
    - wget -O packer-provisioner-goss.zip https://github.com/YaleUniversity/packer-provisioner-goss/releases/download/v3.1.3/packer-provisioner-goss-v3.1.3-linux-amd64.zip
    - unzip packer-provisioner-goss.zip -d /tmp
    - mkdir -p ~/.packer.d/plugins
    - mv /tmp/packer-provisioner-goss ~/.packer.d/plugins
    - echo "Host *" >> /etc/ssh/ssh_config
    - echo "    PubkeyAcceptedAlgorithms +ssh-rsa" >> /etc/ssh/ssh_config
    - echo "    HostkeyAlgorithms +ssh-rsa" >> /etc/ssh/ssh_config

  submodules_script:
    - git submodule init
    - git submodule update

  build_script:
    - cd image-builder/images/capi
    - make build-qemu-flatcar

  prepare_push_script:
    - cd image-builder/images/capi/output
    - find . -type f -execdir bash -c 'x={}; cp $x ${x%.*}.qcow2; mv $x $x.qcow2' \;

  push_script:
    - ./mc cp --recursive image-builder/images/capi/output/* minio/openstack-k8s-capi-images
    - ./mc policy set download minio/openstack-k8s-capi-images

build_openstack_ubuntu_task_template: &BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  install_script:
    - while fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;
    - while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 5; done;
    - apt-get update
    - apt-get install -y qemu-kvm curl git software-properties-common make python3-pip patch
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com focal main"
    - apt-add-repository --yes --update ppa:ansible/ansible
    - apt-get install -y ansible
    - wget https://dl.min.io/client/mc/release/linux-amd64/mc
    - chmod +x mc
    - ./mc alias set minio https://minio.services.osism.tech $MINIO_ACCESS_KEY $MINIO_SECRET_KEY
    - wget -O packer-provisioner-goss.zip https://github.com/YaleUniversity/packer-provisioner-goss/releases/download/v3.1.3/packer-provisioner-goss-v3.1.3-linux-amd64.zip
    - unzip packer-provisioner-goss.zip -d /tmp
    - mkdir -p ~/.packer.d/plugins
    - mv /tmp/packer-provisioner-goss ~/.packer.d/plugins
    - echo "Host *" >> /etc/ssh/ssh_config
    - echo "    PubkeyAcceptedAlgorithms +ssh-rsa" >> /etc/ssh/ssh_config
    - echo "    HostkeyAlgorithms +ssh-rsa" >> /etc/ssh/ssh_config

  submodules_script:
    - git submodule init
    - git submodule update

  build_script:
    - cd image-builder/images/capi
    - make build-qemu-ubuntu-2004

  prepare_push_script:
    - cd image-builder/images/capi/output
    - find . -type f -execdir bash -c 'x={}; cp $x ${x%.*}.qcow2; mv $x $x.qcow2' \;

  push_script:
    - ./mc cp --recursive image-builder/images/capi/output/* minio/openstack-k8s-capi-images
    - ./mc policy set download minio/openstack-k8s-capi-images

# tasks

build_openstack_ubuntu_122_task:
  <<: *BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  skip: "!changesInclude('extra_vars_openstack_ubuntu_122.json', '.cirrus.yml')"
  env:
    PACKER_VAR_FILES: ../../../extra_vars_openstack_ubuntu_122.json

build_openstack_ubuntu_123_task:
  <<: *BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  skip: "!changesInclude('extra_vars_openstack_ubuntu_123.json', '.cirrus.yml')"
  env:
    PACKER_VAR_FILES: ../../../extra_vars_openstack_ubuntu_123.json

build_openstack_ubuntu_124_task:
  <<: *BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  skip: "!changesInclude('extra_vars_openstack_ubuntu_124.json', '.cirrus.yml')"
  env:
    PACKER_VAR_FILES: ../../../extra_vars_openstack_ubuntu_124.json

build_openstack_ubuntu_125_task:
  <<: *BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  skip: "!changesInclude('extra_vars_openstack_ubuntu_125.json', '.cirrus.yml')"
  env:
    PACKER_VAR_FILES: ../../../extra_vars_openstack_ubuntu_125.json

build_openstack_ubuntu_126_task:
  <<: *BUILD_OPENSTACK_UBUNTU_TASK_TEMPLATE
  skip: "!changesInclude('extra_vars_openstack_ubuntu_126.json', '.cirrus.yml')"
  env:
    PACKER_VAR_FILES: ../../../extra_vars_openstack_ubuntu_126.json

# build_openstack_flatcar_124_task:
#   <<: *BUILD_OPENSTACK_FLATCAR_TASK_TEMPLATE
#   skip: "!changesInclude('extra_vars_openstack_flatcar_124.json', '.cirrus.yml')"
#   env:
#     PACKER_VAR_FILES: ../../../extra_vars_openstack_flatcar_124.json
#     FLATCAR_CHANNEL: stable
#     FLATCAR_VERSION: 3227.2.2

# build_openstack_flatcar_125_task:
#   <<: *BUILD_OPENSTACK_FLATCAR_TASK_TEMPLATE
#   skip: "!changesInclude('extra_vars_openstack_flatcar_125.json', '.cirrus.yml')"
#   env:
#     PACKER_VAR_FILES: ../../../extra_vars_openstack_flatcar_125.json
#     FLATCAR_CHANNEL: stable
#     FLATCAR_VERSION: 3227.2.2
